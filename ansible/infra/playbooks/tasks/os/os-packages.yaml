---
- name: Packages | Add apt repositories
  ansible.builtin.apt_repository:
    repo: "{{ item }}"
    update_cache: true
  loop: "{{ packages_repositories | default([]) }}"

- name: Packages | Disabled apt recommends
  ansible.builtin.blockinfile:
    path: /etc/apt/apt/apt.conf.d/02recommends
    mode: "0644"
    create: true
    block: |
      APT::Install-Recommends "false";
      APT::Install-Suggests "false";
      APT::Get::Install-Recommends "false";
      APT::Get::Install-Suggests "false";

- name: Packages | Upgrade all system packages
  ansible.builtin.apt:
    upgrade: full
    update_cache: true
    cache_valid_time: 3600
    autoclean: true
    autoremove: true
  register: apt_upgrade
  retries: 5
  until: apt_upgrade is success

- name: Packages | Installing common packages
  ansible.builtin.apt:
    name: "{{ packages_install | default([]) }}"
    install_recommends: false
    update_cache: true
    cache_valid_time: 3600
    autoclean: true
    autoremove: true
  register: apt_install_common
  retries: 5
  until: apt_install_common is success
  when:
    - packages_install is defined
    - packages_install is iterable
    - packages_install | length > 0

- name: Packages | Gather Installed packages
  ansible.builtin.package_facts:
    manager: auto

- name: Packages | Check if snap is Installed
  ansible.builtin.debug:
  msg: "snapd is installed"
  register: snapd_check
  when:
    - "'snapd' in packages_remove"
    - "'snapd' in ansible_facts.packages"

- name: Packages | Remove snap packages
  ansible.builtin.command: snap remove {{ item }}
  loop:
    - lxd
    - core18
    - core20
    - snapd
  when:
    - "'snapd' in packages_remove"
    - "'snapd' in ansible_facts.packages"
    - snapd_check.failed is defined

- name: Packages | Remove packages
  ansible.builtin.apt:
    name: "{{ packages_remove | default([]) }}"
    state: absent
    autoremove: true

- name: Packages | Remove files
  ansible.builtin.file:
    state: absent
    path: "{{ item }}"
  loop:
    - "/home/{{ ansible_user }}/.snap"
    - "/snap"
    - "/var/snap"
    - "/var/lib/snapd"
    - "/var/cache/snapd"
    - "/usr/lib/snapd"
    - "/etc/cloud"
    - "/var/lib/cloud"
  when:
    - "'snapd' in packages_remove"
    - "'cloud-init' in packages_remove"
